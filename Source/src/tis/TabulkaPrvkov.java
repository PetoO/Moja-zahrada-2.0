/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tis;

import java.awt.print.PrinterException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author peto
 */
public class TabulkaPrvkov extends javax.swing.JFrame {

    private static ArrayList<TPrvok> prvky;
    private static HashMap<String, ArrayList<String>> excel;
    DecimalFormat df = new DecimalFormat("#0.#");
    /**
     * zobrazi prvky na planiku do tabulky v novom okne
     */
    public TabulkaPrvkov(ArrayList<TPrvok> prvky, HashMap<String, ArrayList<String>> excel ) {
        initComponents();
        this.prvky= prvky;
        this.excel=excel;
        TPrvok prvok;
        
        //ArrayList<String> nadpisy = excel.get("Slovenský názov");
        //System.out.println(excel.get("baza čierna"));
        
        ArrayList<ArrayList<String>> tabulka = new ArrayList< ArrayList<String>>();
        
        for(int i=0; i< prvky.size(); i++){
            prvok= prvky.get(i);
            
            if (prvok instanceof TBod) {
                TBod aPrvok = ((TBod) prvok);
                ArrayList<String> riadok = new ArrayList<>();
                riadok.add(aPrvok.meno);
                riadok.add("bod");
                riadok.add(Integer.toString(1)); 
                
                boolean obsahuje= false;
                int por=0;
                int j=0;
                for(ArrayList<String> rr : tabulka ){
                    if(rr.get(0).toLowerCase().equals(riadok.get(0).toLowerCase())){
                        obsahuje=true;
                        por=j;
                        break;
                    }
                    j+=1;
                }
                
                if(obsahuje){    
                    //System.out.println(riadok);
                    riadok=tabulka.get(por);
                    //tabulka.remove(riadok);
                    riadok.set(2, Integer.toString(Integer.parseInt(riadok.get(2))+1));
                    tabulka.set(por,riadok);
                }else{
                    tabulka.add(riadok);
                }
            }

            if (prvok instanceof TCiara) {
                TCiara aPrvok = ((TCiara) prvok);
                    ArrayList<String> riadok = new ArrayList<>();
                    riadok.add(aPrvok.meno);
                    riadok.add("línia");
                    riadok.add(df.format(aPrvok.getLength()));
                    tabulka.add(riadok);
                
            }

            if (prvok instanceof TPlocha) {
                TPlocha aPrvok = ((TPlocha) prvok);
                    ArrayList<String> riadok = new ArrayList<>();
                    riadok.add(aPrvok.meno);
                    riadok.add("plocha");
                    riadok.add(df.format(aPrvok.getArea()));
                    tabulka.add(riadok);
             
            }
        }
       
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
 
    for (int i=0; i< tabulka.size(); i++){
        ArrayList<String> rowdata = tabulka.get(i);
        if(rowdata.get(1).equals("bod")){
           rowdata.set(2, rowdata.get(2)+" ks");
        }
        if(rowdata.get(1).equals("línia")){
           rowdata.set(2, rowdata.get(2)+" m");
        }
        if(rowdata.get(1).equals("plocha")){
           rowdata.set(2, rowdata.get(2)+" m2");
        }
        
        model.insertRow(model.getRowCount(), tabulka.get(i).toArray());
    }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Názov", "Typ", "Počet/Dĺžka/Rozloha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Tlač");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jButton1.setVisible(false);
        exportToPdf export = new exportToPdf();
        try {
            export.PrintFrameToPDF(this);
        } catch (PrinterException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabulkaPrvkov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabulkaPrvkov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabulkaPrvkov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabulkaPrvkov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabulkaPrvkov(prvky, excel).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
